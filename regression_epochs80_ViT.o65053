[2024-04-26 17:41:36,998][Experiment][INFO] - Reading data
[2024-04-26 17:41:37,011][Experiment][INFO] - Initializing dataloaders
[2024-04-26 17:41:37,029][Experiment][INFO] - Using device cuda:0
[2024-04-26 17:41:37,029][Experiment][INFO] - Initializing model
[2024-04-26 17:41:37,963][Experiment][INFO] - Model (Regressor[ViT]) has 12419286 parameters
[2024-04-26 17:41:37,964][Experiment][INFO] - Initializing trainer
[2024-04-26 17:41:37,964][Experiment][INFO] - Running training
[2024-04-26 17:41:37,964][Trainer][INFO] - Preparing model training
[2024-04-26 17:41:38,056][Trainer][INFO] - Writing tensorboard summaries to dir /remote/gpu00/nordmann/skatr/runs/regression_epochs80_ViT/2024-04-26_16-59-38
[2024-04-26 17:41:38,056][Trainer][INFO] - Beginning training loop with epochs set to 10
Error executing job with overrides: ['submit=True', 'submit=False']
Traceback (most recent call last):
  File "/remote/gpu00/nordmann/skatr/./main.py", line 36, in main
    experiment.run()
  File "/remote/gpu00/nordmann/skatr/src/experiments/base_experiment.py", line 47, in run
    trainer.run_training()
  File "/remote/gpu00/nordmann/skatr/src/trainers/trainer.py", line 93, in run_training
    self.train_one_epoch()
  File "/remote/gpu00/nordmann/skatr/src/trainers/trainer.py", line 142, in train_one_epoch
    loss = self.model.batch_loss(x)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/remote/gpu00/nordmann/skatr/src/models/regressor.py", line 9, in batch_loss
    y_pred = self(x)
             ^^^^^^^
  File "/remote/gpu00/nordmann/.conda/envs/skatr/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/remote/gpu00/nordmann/.conda/envs/skatr/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/remote/gpu00/nordmann/skatr/src/models/regressor.py", line 14, in forward
    return self.net(x)
           ^^^^^^^^^^^
  File "/remote/gpu00/nordmann/.conda/envs/skatr/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/remote/gpu00/nordmann/.conda/envs/skatr/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/remote/gpu00/nordmann/skatr/src/networks/vit.py", line 88, in forward
    x = self.x_embedder(x) + self.pos_encoding() # (B, T, D)
        ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
RuntimeError: The size of tensor a (20000) must match the size of tensor b (2500) at non-singleton dimension 1

Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
